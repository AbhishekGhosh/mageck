#!/usr/bin/env python
"""MAGeCK file operation module
Copyright (c) 2014 Wei Li, Han Xu, Xiaole Liu lab 
This code is free software; you can redistribute it and/or modify it
under the terms of the BSD License (see the file COPYING included with
the distribution).
@status:  experimental
@version: $Revision$
@author:  Wei Li 
@contact: li.david.wei AT gmail.com
"""

from __future__ import print_function
import sys
import math
import logging
import subprocess

  
def systemcall(command, cmsg=True):
  logging.info('Running command: '+command);
  t=subprocess.Popen(command,stdout=subprocess.PIPE,stderr=subprocess.STDOUT,shell=True).communicate()[0].decode("utf-8");
  #tmsg=t.stdout.read();
  if cmsg:
    logging.info('Command message:');
    for t0 in t.split('\n'):
      logging.info('  '+t0);
    logging.info('End command message.');
  return t;




def merge_rank_files(lowfile,highfile,outfile,args):
  """
  Merge neg. and pos. selected files (generated by RRA) into one
  """
  gfile={};
  # read files individually
  nline=0;
  for line in open(lowfile):
    field=line.strip().split();
    nline+=1;
    if nline==1: # skip the first line
      continue;
    if len(field)<4:
      logging.error('The number of fields in file '+lowfile+' is <4.');
      sys.exit(-1);
    gid=field[0];
    gitem=int(field[1]);
    g_p=float(field[2]);
    g_fdr=float(field[3]);
    gfile[gid]=[(gitem,g_p,g_fdr,nline-1)];
  maxnline=nline;
  nline=0;
  for line in open(highfile):
    field=line.strip().split();
    nline+=1;
    if nline==1: # skip the first line
      continue;
    if len(field)<4:
      logging.error('The number of fields in file '+highfile+' is <4.');
      sys.exit(-1);
    gid=field[0];
    gitem=int(field[1]);
    g_p=float(field[2]);
    g_fdr=float(field[3]);
    if gid not in gfile:
      logging.warning('Warning: item '+gid+' appears in '+highfile+', but not in '+lowfile+'.');
      gfile[gid]=[('NA',1.0,1.0,maxnline)];
    gfile[gid]+=[(gitem,g_p,g_fdr,nline-1)];
  # check whether some items appear in the first group, but not in the second group
  for (k,v) in gfile.iteritems():
    if len(v)==1:
      logging.warning('Warning: item '+gid+' appears in '+lowfile+', but not in '+highfile+'.');
      gfile[gid]+=[('NA',1.0,1.0,maxnline)];
      
  
  # write to files
  ofhd=open(outfile,'w');
  print('\t'.join(['id','num.neg','p.neg','fdr.neg','rank.neg','num.pos','p.pos','fdr.pos','rank.pos']),file=ofhd);
  if hasattr(args,'sort_criteria') and args.sort_criteria=='pos':
    logging.debug('Sorting the merged items by positive selection...');
    skey=sorted(gfile.items(),key=lambda x : x[1][1][1]);
  else:
    logging.debug('Sorting the merged items by negative selection...');
    skey=sorted(gfile.items(),key=lambda x : x[1][0][1]);

  for k in skey:
    print('\t'.join([k[0], '\t'.join([str(t) for t in k[1][0]+k[1][1]])]),file=ofhd);
  
  ofhd.close();
    
   

